"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var data_forge_1 = require("data-forge");
require("./ema");
/**
 * Compute macd for a series.
 *
 * @param shortPeriod - The time period of the short moving average.
 * @param longPeriod - The time period of the long moving average.
 * @param signalPeriod - The time period for the macd signal line.
 *
 * @returns Returns a dataframe for the computed macd indicator.
 */
function macd(shortPeriod, longPeriod, signalPeriod) {
    chai_1.assert.isNumber(shortPeriod, "Expected 'shortPeriod' parameter to 'Series.macd' to be a number that specifies the time period of the short moving average.");
    chai_1.assert.isNumber(longPeriod, "Expected 'longPeriod' parameter to 'Series.macd' to be a number that specifies the time period of the long moving average.");
    chai_1.assert.isNumber(signalPeriod, "Expected 'signalPeriod' parameter to 'Series.macd' to be a number that specifies the time period for the macd signal line.");
    var shortEMA = this.ema(shortPeriod);
    var longEMA = this.ema(longPeriod);
    var macd = shortEMA.skip(longPeriod - shortPeriod)
        .zip(longEMA, function (short, long) { return short - long; });
    var signal = macd.ema(signalPeriod);
    var histogram = macd.skip(signalPeriod - 1)
        .zip(signal, function (macd, signal) { return macd - signal; });
    return data_forge_1.DataFrame.merge([
        shortEMA.inflate(function (shortEMA) { return ({ shortEMA: shortEMA }); }),
        longEMA.inflate(function (longEMA) { return ({ longEMA: longEMA }); }),
        macd.inflate(function (macd) { return ({ macd: macd }); }),
        signal.inflate(function (signal) { return ({ signal: signal }); }),
        histogram.inflate(function (histogram) { return ({ histogram: histogram }); })
    ]);
    /*TODO: potential short hand syntax.
    return DataFrame.merge({
        shortEMA,
        longEMA,
        macd,
        signal,
        histogram
    });
    */
    /*TODO: this almost works but doesn't line up the index!
    return new DataFrame({ //todo: need to merge on index!
        index: this.getIndex(),
        columns: {
            shortEMA,
            longEMA,
            macd,
            signal,
            histogram,
        },
    });
    */
}
;
data_forge_1.Series.prototype.macd = macd;
//# sourceMappingURL=macd.js.map
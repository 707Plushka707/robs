"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var data_forge_1 = require("data-forge");
require("../indicators/rsi");
require("../indicators/streaks");
require("../indicators/rate-of-change");
function crsi(rsiPeriod, streakRsiPeriod, percentRankPeriod) {
    chai_1.assert.isNumber(rsiPeriod, "Expected 'rsiPeriod' parameter to 'DataFrame.crsi' to be a number that specifies the time period for the rsi component of crsi.");
    chai_1.assert.isNumber(streakRsiPeriod, "Expected 'streakRsiPeriod' parameter to 'DataFrame.crsi' to be a number that specifies the time period for the streak/updown component of crsi.");
    chai_1.assert.isNumber(percentRankPeriod, "Expected 'percentRankPeriod' parameter to 'DataFrame.crsi' to be a number that specifies the time period for the roc component of crsi.");
    var rsi = this.rsi(rsiPeriod);
    var streaks = this.streaks(2).rsi(streakRsiPeriod);
    var percentRank = this.amountChange(2).bake().percentRank(percentRankPeriod); //TODO: Don't want to have to do this bake. But %rank is quite slow otherwise.
    return rsi.merge(streaks, percentRank)
        .where(function (values) { return values.filter(function (value) { return value !== undefined; }).length === 3; })
        .select(function (_a) {
        var rsi = _a[0], streak = _a[1], percentRank = _a[2];
        return (rsi + streak + percentRank) / 3;
    });
}
data_forge_1.Series.prototype.crsi = crsi;
//# sourceMappingURL=conners-rsi.js.map